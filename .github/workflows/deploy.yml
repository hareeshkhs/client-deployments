name: ðŸš€ Deploy Schema Manager

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Which environment to deploy to?"
        required: true
        type: choice
        options:
          - pg-env-a
          - pg-env-b
          - both

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [pg-env-a, pg-env-b]

    steps:
      - name: Evaluate condition
        run: |
          if [[ "${{ github.event.inputs.environment }}" != "both" && "${{ github.event.inputs.environment }}" != "${{ matrix.env }}" ]]; then
            echo "Skipping environment: ${{ matrix.env }}"
            exit 0
          fi

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install PyYAML
        run: pip install pyyaml

      - name: Parse env-configs.yaml
        id: config
        run: |
          python3 -c "
          import os
          import yaml
          with open('env-configs.yaml') as f:
              data = yaml.safe_load(f)
              env = data['${{ matrix.env }}']['dap_schema_manager']['data']
              with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
                  fh.write(f'tag={env[\"TAG\"]}\n')
                  fh.write(f'db={env[\"POSTGRES_DB\"]}\n')
                  fh.write(f'user={env[\"POSTGRES_USER\"]}\n')
                  fh.write(f'schemas={env[\"AVAILABLE_SCHEMAS\"]}\n')
          "
        shell: bash

      - name: Set up kubeconfig
        run: echo "${{ secrets[format('KUBECONFIG_{0}', toUpper(matrix.env))] }}" > kubeconfig

      - name: Deploy to ${{ matrix.env }}
        env:
          IMAGE_TAG: ${{ steps.config.outputs.tag }}
        run: |
          export KUBECONFIG=./kubeconfig
          kubectl set image deployment/pg-app pg-app=ghcr.io/your-org/liquibase-schema-manager:$IMAGE_TAG --namespace=${{ matrix.env }}
          kubectl rollout status deployment/pg-app --namespace=${{ matrix.env }}
